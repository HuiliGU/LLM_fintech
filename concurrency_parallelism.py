# 使用 async/await 实现异步代码：异步代码意味着在等待某些操作（如网络请求或文件I/O）完成时，
# 程序可以继续执行其他任务，从而提高效率。

### I/O 密集型 - 使用异步
# 这个"等待其他事情"通常指的是一些相对较慢（与处理器和 RAM 存储器的速度相比）的 I/O 操作，比如说：
# 1.通过网络发送来自客户端的数据
# 2.客户端接收来自网络中的数据
# 3.磁盘中要由系统读取并提供给程序的文件的内容
# 4.程序提供给系统的要写入磁盘的内容
# 5.一个 API 的远程调用
# 6.一个数据库操作，直到完成
# 7.一个数据库查询，直到返回结果
# 等等.
# 这个执行的时间大多是在等待 I/O 操作，因此它们被叫做 "I/O 密集型" 操作。






### CPU 密集型 - 使用并行